** 0.4.14: Smap and plotting improvements
- The StrikeMap object can now be initialised with the theta and phi angle, no longer need the full path to the file (although of course you can still use the file)
- If no file is given to the StrikeMap.load_strike_points() the code will look for the strike points file in the same folder than the strike map
- The substract noise function include now an option to make a copy of the frames or not (to save memory, dafult: True)
- Default plotting options now available via configurable namelist (Data/MyData)
- Minor ToDos solved
- Upgraded Readme

** 0.4.13: FILDSIM forward modeling
- Camera parameters no longer in LibParams but in separate txt files in the Data folders
- f90mnl is now a fundamental module, the suite will not work without it
- Added function in the LibIO to read the camera properties
- Current synthetic_signal and plot_synthetic signal function of the FILDSIM library renamed to synthetic_remap and plot_synthetic_remap
- *Note*: The weight function calculation does no longer include  * dr_scint * dp_scint, so the W has dimension of one over dgyr and dpitch of the scintillator grid used for the calculus
- Several plotting plotting capabilities added (credit to Ajvv)
- Routines to model basic camera noise added


** 0.4.12: Small improvements
- New examples for the tracker were added
- *Note*: The order of the inputs in the function write_markers for the tracker was changed, to follow the same logical order of the rest of the suite, now is: write_markers(markers: dict, filename: str)
- Small PEP8 stile corrections
- functions to save and read objects with pickles were added, this allows to save and load figures more or less as .fig from matlab (see save_object_pickle and load_object_pickle)
- Update run_paths.py to the new system to import modules
- function to read the deposition markers was added
- old method to write tracker namelist recoverd for legacy compatibility
- *Note*: the input of the LibIHIBPorbits, for the plot, is now 'ax_params' and 'line_params' instead of 'ax_options' and 'line_options', to be consistent with the rest of the suite
- *Note*: the input of the LibIHIBfields, to read the magnetic field from the database, now requiers shot and time instead of time and shot, to be consistend with the rest of the suite
- *Note*: same with readPsiPolfromDB
- *Note*: vt renamed to vphi in the properties of the markers

** 0.4.11: HotFix
- Fix an issue while importing library of BEB
- change '()' on the plot strike map for '[]' (all the rest of the plots of the suite indicate the units between [])

** 0.4.10: Tomography improvements
*** Tomography improvements
- Solved a bug in the process to W2D to W4D, last gyroradii was being ignored
- Now fildsim.build_weight_matrix() gives also the W2D matrix
- Lib.Tomography.prepare_X_y_FILD now can apply a median filter to the remap frame
- Forward modeled frame and profiles included in the Tomography GUI
*** NBI improvements
- Renamed _NBI_diaggeom_cordinates to NBI_diaggeom_cordinates
- The function NBI_diaggeom_coordinates include now the 'length' of the NBI line as well as the tangency point
- Included 'calculate_intersection' method in the NBI class to calculate the intersection points of the NBI line with the flux surfaces
- Included generate_tarcker_markers in the NBI class to generate markers for the tracer
*** Tracker changes
- The write namelist for the tracker was updated to the new f90mnl format adapted in the rest of the suite
- Duplicated tracker routines were eliminated, now only the iHIBPsim library should be used for the fields and orbits reading
- *DEPRECATED* The flag grid on the plotTimeTraces() of the orbit class was deprecated, if you want to plot the grid pass grid:'both' or 'major' to the ax_options dictionary
- plotTimeTraces() now has a flag to plot the R,Z,phi temporal evolution
- The routines to plot the orbits now admit a flag (default: True) to plot the vessel or not
- Added routine in the orbit class to calculate the gyrocenter coordinates
- Added the possibility of calculating the magnetic moment with the gyrocenter Bfield
*** Forward modeling improvements:
- Include check to avoid the forward modeling routine to give Nan when some points of the distribution are outside the range of the Strike map, these points will be ignored

** 0.4.8: Toroidal rotation fitting and hotfix for magnetic spectograms:
*** LibData
- Introduction of routines to read the toroidal rotation velocity from AUG database. Available profiles from IDI, PED and spline-regression to several CXRS diagnostics (CUZ, COZ, CMZ & CEZ).
*** Magnetics
- Ballooning coils phase correction for the FFT taken from pyspecview.
- All examples in FreqAnalysis corrected with the phase.

** 0.4.7: Support for BEP plotting:
- Added initial library for reading the calibrated and uncalibrated signal from BEP shotfiles.
- Simple GUI to plot interactively see the spectra for shots.
- Added few examples to plot the BEP in a non-interactive way.

** 0.4.6: FILDSIM orbit plotting:
- Orbit plotting included to plot FILDSIM calculated orbits

** 0.4.5: Bug solved:
- Solved a bug in the diaggeom coordinates for NBI8. NBI8 end was off by almost 10 cm

** 0.4.4: Import changes:
- Routes to libraries were change such that you can import the library just setting your environment variable in the path

** 0.4.3: i-HIBPsim strike line reader & Frequency tracking.
*** LibHIBPstrikes
- Adding support read and plot the strikelines from i-HIBPsim code.
- Added support to plot the scintillator synthetic signal.
- Added support to introduce the database of strike lines.
- Changed attributes in the database to adapt to a common TRANSP-like database. long_name contains a full description of the field while the short_name contains a ready-to-plot name.
*** LibFrequencyAnalysis
- Added STFT2 routine: wrapper to scipy implementation, emulating Giovanni's.
- Added iSTFT routine: wrapper to scipy implmentation, to reconstruct the signal from an STFT.
- Added Vertex and Graph classes, allowing for minimal path search (using Dijsktra's method).
- Added routine to search for frequency in a spectrogram (trackFrequency).
- Moved examples 'multipow', 'frequencyTracking' to new Folder: 'FrequencyAnalysis'
- New example to plot fast the spectrogram of a given magnetic pick-up coil.
*** Movement of LibDataAUG
- LibDataAUG is now moved inside the folder LibData, to allow for a smother integration of future machines

** 0.4.2: FILDSIM forward modeling
- Now the StrikeMap.calculate_resolutions() also calculate the interpolators so one can just call smap.interpolators['pitch']['sigma'](gyr0, pitch0) and you will have the interpolated value of sigma of the pitch for gyr0, pitch0.
- The StrikeMap object for FILD now include the fields: unique_gyroradius, unique_pitch and collimator_factor_matrix.
- *Included requested feature*: Issue #58: read_ASCOT_distribution implemented, only valid for ASCOT4
- Fits of the calculate resolution function are now inside the 'fits' dictionary, contained in the resolution section of the strike map object
- read_scintillator_efficiency moved from the LibIO to the new LibScintillatorCharacterization.py
- Efficiency included in FILD forward modeling
- Efficiency included in tomography
- Calculation of the W function for FILD re-written in a more compact way. Coherent with the models used to calculate the resolutions. Now it much faster
- fildsim.plot_geometry added in the fildsim library. It plot the plates geometry in 3d and is projections
- Method relating the absolute calibration of the frames removed from FILDSIM library, they'll be included again in next version once they are tested

** 0.4.1: Minor improvements + ELM filtering
- Added a function to calculate the intersection between any curves in 2D (LibUtilities.find_2D_intersection(x1, y1, x2, y2))
- Improved LibPlotting.plot_flux surfaces() : Now color can be selected, cm can be used as units, the axis limit will not be changed if an axis is given
- Included root directory of the suite in path_suite.py to be aable of using the command =import Lib as ss= outside the root directory of the suite
- Included reading of ELM time base (LibData.profiles.get_ELM_timebase.py)
- Included ELM filtering: Note, it will just delete from your input signal the ELM time points
- Read frame from a cin file will no longer return a squeeze matrix when you load the frames internally. When you load them externally, they will be squeeze()
- Solved issue #7: NBI profile calculation and plot upgraded
- Plot NBI added to the NBI class
- Now calc_pitch_profile of the NBI class take as default IpBt sign defined in the .dat library


** 0.4.0: New suite structure:
- Typos in comments corrected
- PEP8 agreement revised
- LibDataAUG subdivided in different modules (it was too big)
- Re-written first_run.py
- Verbose of remap_all_loaded_frames_FILD.py improved

** 0.3.6: Improvements in tomography:
- Now the Ridge, nnridge and Elastic net scan also return a dictionary with the produced figures

** 0.3.5: Bug solved:
- *Bug solved* Solved issue #54 on the broken time base of CCD cameras

** 0.3.4: First INPASIM utilities:
- GUIs files where divided into a new folder GUIs
- *Included requested feature*: Issue #33. Now if a path is passed to the remap routine mask=path the code will load the mask contained in file inidcated by path
- Included Non Negative Ridge as a regression method
- Included method to cut the video in the Video class, to restrict to a given region of pixels: Video.cut_frames()
- A flag was added in the noise_subtraction and filter methods of the Video class in order to decide if we want to create a copy of the experimental frames or not
- First methods to calculate optical transmission

** 0.3.3 i-HIBPsim strikeline and strikes reader:
- New library under iHIBPsim for reading and plotting strikelines and strikes on the scintillator.
- Added function in LibDataAUG for reading magnetic pick-up coils and group of them (same toroidal location).
- Added function in LibDataAUG for reading from the equilibrium the basics of the shot data (Bt0, Ip, elongation, ...)

** 0.3.2: First INPASIM utilities:
- Added function to fit a line to a 3d cloud of points
- Rewritten paths_suite.py to allow make easier to include new libraries

** 0.3.1: Tomography:
- Update examples to the new version
- Updated Smaps library (more maps) download the new version if you want
- video.find_orientation() added, allows to find the calculated theta and phi (Yes, I was lazy and I've created a small function to avoid the calculation of this manually)
- Now the same criteria of rmin, dr and so on is implemented in the tomographic reconstruction section
- Scan of tomographic reconstruction now gives a dict as output, not single outputs
- New GUI for tomographic representation plotted

** 0.3.0: GUIs and plotting
- Simplified StrikeMap.plot_pix() and StrikeMap.plot_real(). *IMPORTANT* Names of the input arguments were changed!!!
- Included GUI to explore the camera frames, Video.plot plot_frames_slider() was rename as Vide.GUI_frames()
- Included GUI to explore the remapped frames, Vide.GUI_frames_and_remap()
- Improved Video.plot_frame() was upgraded now you can write 'auto' and the function will load and plot the StrikeMap (see its documentation for further instructions)
- LibPlotting.remove_lines() added, it deletes all lines from a plot, useful to delete the strikemap of one of your plots (used by the new GUIs)
- *BUG SOLVED*: Selecting 'cancel' in the export remap windows raised and error. Now it solved

** 0.2.9 Multipow calculation.
- Included functions to read magnetic coils in LibDataAUG
- Included functions to read the ECE data in LibDataAUG.
- Included plotting function for the ECE data in LibPlotting
- Included plotting function for flux surfaces using contour levels.
- Solved hotfix for the 0.2.8
- Multipow (CPSD for magnetics-ECE) included as an Example/Others
- Included myCPSD calculation for cross-power calculation in LibFrequencyAnalysis.

** 0.2.8 i-HIBP cross sections.
- Included i-HIBP cross sections calculation and storing to files (Issue 34)

** 0.2.7: Hot fix
- *BUG_SOLVED* Problem with the name of the number of saturated pixels solved, now it is possible to export the remap again (the bug was introduced in version 0.2.6). Issue #50

** 0.2.6: Count pixels
- *Included requested feature*: Issue #50 now the number of pixels over a given threshold is counted by default. User can set this threshold in the read_frame method of the video object
- Video.plot_number_saturated_counts() added. If executed without arguments, it plot the pixels counted by default when reading the video. The function accept also a threshold, in this case the pixels are count again
- *BUG_SOLVED* The angles of rFILD are now properly included

** 0.2.5: Improvements in the remap
- Now when some Smap is missing, the program will give the option to use the nearest (in time) existing strike map
- The real value of theta (with all the decimals) as well as the used one are stored to compare the angles used in the remap
- Added plot_orientation() to the video object, to plot the calculated angles with the orientation (real and used)
- The method fildsim.write_namelist() now overwrite by default the existing namelist. You can change this behavior with the flag =overwrite=
- The method fildsim.guess_strike_map_name_FILD() now do not create extra strike maps like 0 and -0
- Camera model included as one more data in the FILD dictionary in LibDataAUG.py
- Some PEP8 correction in iHIBP library

** 0.2.4: HotFix
- *BUG_SOLVED* Solved bugs in the LibFILDSIM.find_strike_map routine, the fildsim options were not updated properly
- Updated FILDSIM example following new f90nml requirements

** 0.2.3: Filter for video object
- *Included requested feature*: median filter added to the filter_frames method of the video class (closes #47)
- *Closes #45* Now the rmin, rmax, pmin, pmax represent the output vector when we want the remap, not the input edges (:-()
- 'Clean' a bit the method 'find_strike_map' from the FILDSIM library, now a loop is used to run over FILDSIM namelist
- Included Gaussian filter for the video frames
- Reordered examples
- Simplified plotting options in TimeTrace.plot_single()
- Improved TimeTrace.plot_all(), now they share x axis so zoom is better

** 0.2.2: Debugging
- *BUG_SOLVED* in the plot_vessel function, the factor from m to cm was 10 instead of 100!
- *BUG_SOLVED* rotation of the vessel was not passed from the plot_vessel routine to the method which calculate the vessel coordinates
- *BUG_SOLVED* Solved bug when the requested interval to average the noise was not in the file (issue #46)

** 0.2.1: FIDASIM implementation
- First routines to read FIDASIM output added, (thanks Pilar :-)) Although some work still needed in that module this is not completely checked
- Updated Readme following nice example of iHIBP
- Calibration used in the remapping is saved in the remapping options, such that future comparisons of remapped data is easier
- plot_profiles_in_time of the video object allows now to pass the min and max of the scale as inputs
- *Included requested feature* First implementation of issue #41

** 0.2.0: Strike Maps reordering
- p1D_shaded_error updated with the possibility of plotting the central line
- Updated gitignore to ignore a folder call 'MyRoutines' for the user to have its own routines
- Updated the paths to strike maps, now two libraries will be used: Remap 'low' number of markers, 'Tomography' high number of markers
- Updated namelist format, now the suite follows the criteria given in the f90nml module
- Added GNU license

** 0.1.9: Spectrograms
- First spectrogram function added, first step towards the fast channel analysis
- Better examples included
- Better checking of whether we are in AUG or not
- Now the remapping of the whole shot can be done using a given strike map

** 0.1.8: Reverse FILD
- IB sign were included to include the proper pitch definition in FILDSIM even with the reverse field
- *BUG_SOLVED*: Solve a bug which forced the remap to ignore theta and phi if just one of the strike maps was not found
- Included the RealBPP in the exported remap data

** 0.1.7: Improve reading/writing
- Solved the issue in the init due to new iHIBPsim libraries
- Included a check to not overwrite files, now if one of the saving routines try to save a file which exist, it will open a window to give to the user the chance to change the name
- Added also a similar function to open files in case it does not find the name, it will pop-up a window
- Improved the checking to test we are in AUG
- Add a method to integrate the remapped frames in the desired range radius-pitch (arbitrary shapes allowed via roi)

** 0.1.6: What's new?
- Added possibility of loading the used ROIs
- Added the possibility of plotting each individual time trace
- Added general routine to load the created ncdf files
- Suppressed remapped slider plotting in the video object, it was too buggy, new one will come with tkinter

** 0.1.5: What's new?
- Now the remap_all_loaded_frames_FILD first calculate all theta and phi and see how many strike maps must be calculated. The user can decide whether if perform the FILDSIM calculation or just take a single strike map
- Added the possibility of remapping with a ROI. Also export the ROI

** 0.1.4: What is new?
- iHIBP routines to interact with the tracker and iHIBPsim, first round
